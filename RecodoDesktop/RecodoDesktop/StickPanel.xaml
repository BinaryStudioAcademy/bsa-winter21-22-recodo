<Window x:Class="Recodo.Desktop.Main.StickPanel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RecodoDesktop"
        mc:Ignorable="d"
        MouseDown="Window_MouseDown"
        AllowsTransparency ="True"
        WindowStyle = "None"
        ResizeMode="NoResize"
        Title="StickPanel" Height="313.86" Width="70">
    <Window.Background>
        <SolidColorBrush Opacity="0" Color="White"/>
    </Window.Background>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Toolbar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Height" Value="52" />
                <Setter Property="Width" Value="52" />
            </Style>

            <FontFamily x:Key="Poppins-SemiBold">/fonts/Poppins-SemiBold</FontFamily>
        </ResourceDictionary>

    </Window.Resources>

    <Border BorderThickness="0" CornerRadius="0,20,20,0" Background="#732939">
        <Grid>
            <StackPanel Height="345" Grid.ColumnSpan="2" Margin="0,0,0,0">
                <Label FontFamily="{StaticResource Poppins-SemiBold}" FontWeight="Bold" Name="TimeLabel" Margin="0 10 0 0" Foreground="#E0748B" HorizontalContentAlignment="Center" FontSize="13"></Label>

                <Button Name="ButtonStop" Click="Button_Stop_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#B6445D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="15">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="Icons/panel/stop.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ButtonStop, Path=IsFocused}" Value="True">
                                            <Setter Property="Source" Value="Icons/panel/stop_focus.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button>

                <Button Name="ButtonRefresh" Click="Button_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#B6445D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="15">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="Icons/panel/refresh.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ButtonRefresh, Path=IsFocused}" Value="True">
                                            <Setter Property="Source" Value="Icons/panel/refresh_focus.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button>

                <Button Name="ButtonPause" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Click="ButtonPause_Click">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#B6445D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="15">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="Icons/panel/pause.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ButtonPause, Path=IsFocused}" Value="True">
                                            <Setter Property="Source" Value="Icons/panel/pause_focus.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button>

                <Button Name="ButtonDelete" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#B6445D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="15">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="Icons/panel/delete.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ButtonDelete, Path=IsFocused}" Value="True">
                                            <Setter Property="Source" Value="Icons/panel/delete_focus.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button>

                <Button Name="ButtonEdit" Click="Button_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#B6445D" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="15">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="Icons/panel/edit.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ButtonEdit, Path=IsFocused}" Value="True">
                                            <Setter Property="Source" Value="Icons/panel/edit_focus.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</Window>